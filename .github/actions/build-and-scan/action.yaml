---
name: 'Build and Scan docker image'
description: 'Builds and scans docker image'
runs:
  using: "composite"
  steps:
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          oryd/k8s-toolbox
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    - name: Declare some variables
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true
    - name: Anchore Scanner
      uses: anchore/scan-action@v3
      if: always()
      id: grype-scan
      with:
        image: oryd/k8s-toolbox:sha-${{ steps.vars.outputs.sha_short }}
        fail-build: true
        severity-cutoff: high
        acs-report-enable: true
    - name: Inspect action SARIF report
      shell: bash
      if: always()
      run: |
        echo "::group::Anchore Scan Details"
        jq '.runs[0].results' ${{ steps.grype-scan.outputs.sarif }}
        echo "::endgroup::"
    - name: Trivy Scanner
      if: always()
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: oryd/k8s-toolbox:sha-${{ steps.vars.outputs.sha_short }}
        format: 'table'
        exit-code: 42
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Dockle Linter
      uses: erzz/dockle-action@v1.1.1
      if: always()
      with:
        image: oryd/k8s-toolbox:sha-${{ steps.vars.outputs.sha_short }}
        exit-code: 42
        failure-threshold: fatal
